import streamlit as st


pages = ["Home", "Settings","FAQ","About"]
st.sidebar.title('Navigation')
page = st.sidebar.radio("Pages", options=pages)
# st.area_chart({'x': [1, 2, 3, 4], 'y': [10, 20, 30, 40]})
# Home page
if page == "Home":
    st.title(':earth_americas: Barcode Scanner Monitoring ')
    st.caption("üìö A Streamlit app powered by Google Gemini to teach professionals basic computer skills")
    st.write('Barcode Settings:')
    st.text_input('Enter Barcode a IP value')
    st.text_input('Enter a Port value')

    # Create tabs for different skill categories
    tabs = st.tabs(["üìù Basic Settings","üîß Troubleshooting"])

    # Basic Settings
    with tabs[0]:
        st.subheader("üìù Basic Settings of Barcode")

        skill_name = st.text_input("Enter the office skill you want to learn (e.g., Excel basics, Word formatting):", key="skill_name", value="Excel basics")
        level = st.selectbox("Select your proficiency level:", ["Beginner", "Intermediate", "Advanced"], key="level_office")

        # if st.button("Generate Tutorial", key="generate_office_tutorial"):
            # generate_content(skill_name, level, "Office Skills")
    
    # Troubleshooting
    with tabs[1]:
        st.header("üîß Learn Troubleshooting Skills")
        st.subheader("üõ†Ô∏è Troubleshooting")

        issue_name = st.text_input("Enter the issue you want to troubleshoot (e.g., computer won't start, slow internet):", key="issue_name", value="slow internet")
        level = st.selectbox("Select your proficiency level:", ["Beginner", "Intermediate", "Advanced"], key="level_troubleshooting")

        # if st.button("Generate Troubleshooting Guide", key="generate_troubleshooting_guide"):
        #     generate_content(issue_name, level, "Troubleshooting")

   

    # Disclaimer
    st.markdown("---")
    st.markdown("### Disclaimer")
    st.markdown("""
    This app is intended for educational purposes only. The content generated by the Google Gemini API is based on the information provided and is not guaranteed to be accurate or comprehensive.
    Please use the tutorials and guides as a supplement to other learning resources.
    The developers of this app are not responsible for any errors or omissions in the content generated.
    """)

if page == "Settings":
    st.title(':wrench: Settings')
    st.write('Settings page')
    st.write('Barcode Settings:')
    st.text_input('Enter Barcode a IP value')
    st.text_input('Enter a Port value')

if page =="FAQ":
    st.title(':question: FAQ')
    st.write('FAQ page')
    
 # Adding a FAQ section
    st.markdown("---")
    st.markdown("### Frequently Asked Questions (FAQ)")
    faq_expander = st.expander("How does this app work?")
    faq_expander.write("""
    This app uses the Google Gemini API to generate tutorials and guides for various computer skills. You provide the skill and your proficiency level, and the app generates content tailored to your needs.
    """)

    faq_expander = st.expander("Is the content generated always accurate?")
    faq_expander.write("""
    The content generated by the Google Gemini API is based on the information provided and is not guaranteed to be accurate or comprehensive. It should be used as a supplement to other learning resources.
    """)

    faq_expander = st.expander("How can I get a Google Gemini API key?")
    faq_expander.write("""
    You can get a Google Gemini API key by signing up on the [Google Gemini Makersuite website](https://makersuite.google.com/app/home).
    """)


